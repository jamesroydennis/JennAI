# =============================================================================
# SYSTEM REQUIREMENTS (manual install, not managed by conda/pip):
#
# NOTE: The `full_reset.bat` script can automate much of the Python environment
#       setup, but the external tools below must be installed manually first.
#
# - Allure CLI is required for report serving:
#     scoop install allure      # (Recommended on Windows)
#     choco install allure      # (Alternative on Windows)
#     brew install allure       # (macOS)
#     sudo apt install allure   # (Linux, if available)
#     # NOTE: Do NOT add 'allure-cmd' to requirements.txt or environment.yaml.
#     #       The Allure CLI is NOT a Python/pip package.
#
# - Java (required for Allure CLI):
#     scoop bucket add java     # (Required before installing openjdk with Scoop)
#     scoop install openjdk     # (Recommended on Windows)
#     choco install openjdk     # (Alternative on Windows)
#
# - eza (for tree view):
#     scoop install eza         # (Windows)
#     brew install eza          # (macOS)
#     sudo apt install eza      # (Linux, if available)
#
# - Node.js Version Management (REQUIRED for frontend tooling):
#     nvm (Node Version Manager) is the preferred method for installing and managing Node.js versions.
#     - nvm for Windows: https://github.com/coreybutler/nvm-windows
#     - nvm for macOS/Linux: https://github.com/nvm-sh/nvm
#     # NOTE: Do NOT use conda to manage Node.js for this project.
#     #       Always use nvm for installing and switching Node.js versions.
#
# - Node.js (required for Sass CLI and other frontend tooling):
#     # After installing nvm, install Node.js using nvm:
#     nvm install lts
#     nvm use lts
#     node --version
#     npm --version
#
# - Sass CLI (for SCSS compilation):
#     npm install -g sass
#     # To check if Sass CLI is installed:
#     #     sass --version
#     # If you see "'sass' is not recognized" or "command not found", install it with:
#     #     npm install -g sass
#     # Usage:
#     #   Compile a single SCSS file to CSS:
#     #     sass path/to/input.scss path/to/output.css
#     #   Example:
#     #     sass src/presentation/api_server/flask_app/static/css/main.scss src/presentation/api_server/flask_app/static/css/main.css
#     #   Watch a folder for changes (recommended for development):
#     #     sass --watch src/presentation/api_server/flask_app/static/css:src/presentation/api_server/flask_app/static/css
#     # NOTE: Do NOT add 'sass' to requirements.txt or environment.yaml.
#     #       The Sass CLI is NOT a Python/pip package.
# =============================================================================

name: jennai-root
channels:
  - pytorch
  - nvidia
  - conda-forge
  - defaults

dependencies:
  - python=3.9
  - cudatoolkit=11.8
  - cudnn=8.9.7
  - flask
  - flask-cors
  - flask-assets
  - inquirerpy
  - numpy
  - pandas
  - requests
  - matplotlib
  - jupyter
  - markdown
  - pip
  - pip:
      - -r requirements.txt